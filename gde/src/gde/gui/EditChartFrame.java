package gde.gui;

import gde.gui.tablemodels.ChartTableModel;
import gde.gui.util.DatabaseHandler;
import gde.models.Chart;
import gde.models.Chart.ChartType;
import gde.models.Field;
import gde.models.Game;
import javax.swing.JTable;
import org.jongo.Jongo;
import org.jongo.MongoCollection;

public class EditChartFrame extends javax.swing.JFrame {
    
    private static final Jongo database = DatabaseHandler.getDatabase();
    private final Game game;
    private final JTable chartTable;

    public EditChartFrame(Game game, JTable chartTable) {
        initComponents();
        this.game = game;
        this.chartTable = chartTable;
        
        MongoCollection fieldsCollection = database.getCollection("fields");
        String query = String.format("{gameId: '%s'}", game.getKey().toString());
        Iterable<Field> fields = fieldsCollection.find(query).as(Field.class);
        for (Field field : fields) {
            horizontalAxisComboBox.addItem(field);
            verticalAxisComboBox.addItem(field);
        }
        for (ChartType fieldType : ChartType.values()) {
            chartTypeComboBox.addItem(fieldType);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        chartTypeLabel = new javax.swing.JLabel();
        chartTitleLabel = new javax.swing.JLabel();
        horizontalAxisLabel = new javax.swing.JLabel();
        horizontalAxisComboBox = new javax.swing.JComboBox();
        chartTitleTextField = new javax.swing.JTextField();
        chartTypeComboBox = new javax.swing.JComboBox();
        verticalAxisComboBox = new javax.swing.JComboBox();
        verticalAxisLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game Diagnostics Engine");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        chartTypeLabel.setText("Chart Type");

        chartTitleLabel.setText("Chart Title");

        horizontalAxisLabel.setText("Horizontal Axis");

        chartTypeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chartTypeComboBoxInputStateChanged(evt);
            }
        });

        verticalAxisLabel.setText("Vertical Axis");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(25, 177, Short.MAX_VALUE)
                        .add(saveButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(25, 25, 25)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, chartTitleLabel)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, verticalAxisLabel)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, chartTypeLabel))
                                .add(18, 18, 18))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .add(horizontalAxisLabel)
                                .add(18, 18, 18)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, verticalAxisComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, horizontalAxisComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, chartTitleTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .add(chartTypeComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chartTitleLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chartTitleTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(horizontalAxisComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(horizontalAxisLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(verticalAxisComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(verticalAxisLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chartTypeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chartTypeLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(saveButton)
                    .add(cancelButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.setVisible(false);
        MongoCollection chartsCollection = database.getCollection("charts");
        Chart chart = new Chart(
                chartTitleTextField.getText(),
                ((Field) horizontalAxisComboBox.getSelectedItem()).getKey().toString(),
                ((Field) verticalAxisComboBox.getSelectedItem()).getKey().toString(),
                (ChartType) chartTypeComboBox.getSelectedItem(),
                game.getKey().toString()
        );
        chartsCollection.save(chart);
        ((ChartTableModel) chartTable.getModel()).update(chart);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void chartTypeComboBoxInputStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chartTypeComboBoxInputStateChanged
        verticalAxisComboBox.setEnabled(chartTypeComboBox.getSelectedItem() != ChartType.PIE);
    }//GEN-LAST:event_chartTypeComboBoxInputStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel chartTitleLabel;
    private javax.swing.JTextField chartTitleTextField;
    private javax.swing.JComboBox chartTypeComboBox;
    private javax.swing.JLabel chartTypeLabel;
    private javax.swing.JComboBox horizontalAxisComboBox;
    private javax.swing.JLabel horizontalAxisLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox verticalAxisComboBox;
    private javax.swing.JLabel verticalAxisLabel;
    // End of variables declaration//GEN-END:variables
}
